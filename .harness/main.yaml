pipeline:
    name: main
    identifier: main
    projectIdentifier: Bank_of_Anthos
    orgIdentifier: default
    tags: {}
    properties:
        ci:
            codebase:
                connectorRef: org.Github
                repoName: bank-of-anthos
                build: <+input>
    stages:
        - stage:
              name: Continuous Integration
              identifier: Continuous_Integration
              type: CI
              spec:
                  cloneCodebase: true
                  infrastructure:
                      type: KubernetesDirect
                      spec:
                          connectorRef: org.GKE
                          namespace: harness-builds
                          automountServiceAccountToken: true
                          nodeSelector: {}
                  execution:
                      steps:
                          - step:
                                type: Run
                                name: License Check
                                identifier: License_Check
                                spec:
                                    connectorRef: org.Dockerhub
                                    image: solsson/addlicense
                                    shell: Sh
                                    command: |-
                                        apk add --no-cache git

                                        set -x
                                        if [[ -d ".git" ]]; then
                                            rm -rf .git
                                        fi
                                        git init
                                        git add --all
                                        git -c user.name="CI Bot" -c user.email="<>" commit -m "initial state"
                                        addlicense ./
                                        if [[ -n $(git status -s) ]]; then
                                            exit 1
                                        fi
                          - parallel:
                                - step:
                                      type: Run
                                      name: Java Checkstyle
                                      identifier: Java_Checkstyle
                                      spec:
                                          connectorRef: org.Dockerhub
                                          image: maven:3.8.5-openjdk-17
                                          shell: Sh
                                          command: mvn checkstyle:check
                                - step:
                                      type: Run
                                      name: Python Checkstyle
                                      identifier: Python_Checkstyle
                                      spec:
                                          connectorRef: org.Dockerhub
                                          image: python:latest
                                          shell: Sh
                                          command: |-
                                              pip install pylint
                                              pylint --rcfile=./.pylintrc ./src/*/*.py
                          - parallel:
                                - step:
                                      type: RunTests
                                      name: Java Unit Tests
                                      identifier: Java_Unit_Tests
                                      spec:
                                          connectorRef: org.Dockerhub
                                          image: maven:3.8.5-openjdk-17
                                          language: Java
                                          buildTool: Maven
                                          args: test
                                          runOnlySelectedTests: true
                                          reports:
                                              type: JUnit
                                              spec:
                                                  paths:
                                                      - "**/*.xml"
                                - step:
                                      type: Run
                                      name: Python Unit Tests
                                      identifier: Python_Unit_Tests
                                      spec:
                                          connectorRef: org.Dockerhub
                                          image: python:latest
                                          shell: Bash
                                          command: |-
                                              set -x
                                              for SERVICE in "contacts" "userservice"; do
                                                  echo "testing $SERVICE..."
                                                  # save current working dir to memory and cd to src/$SERVICE
                                                  pushd src/$SERVICE
                                                  python3 -m venv $HOME/venv-$SERVICE
                                                  source $HOME/venv-$SERVICE/bin/activate
                                                  pip install --upgrade pip
                                                  pip install -r requirements.txt
                                                  python -m pytest -v -p no:warnings --junitxml="result.xml"
                                                  deactivate
                                                  # return to previously saved path
                                                  popd
                                              done
                                          reports:
                                              type: JUnit
                                              spec:
                                                  paths:
                                                      - "**/*.xml"
                          - parallel:
                                - step:
                                      type: Run
                                      name: Java Code Coverage
                                      identifier: Java_Code_Coverage
                                      spec:
                                          connectorRef: org.Dockerhub
                                          image: maven:3.8.5-openjdk-17
                                          shell: Bash
                                          command: |-
                                              source /etc/profile.d/java.sh
                                              for SERVICE in "balancereader" "ledgerwriter" "transactionhistory"; do
                                                  echo "checking $SERVICE..."
                                                  # save current working dir to memory and cd to src/$SERVICE
                                                  pushd src/$SERVICE
                                                  mvn jacoco:report
                                                  echo "Coverage for $SERVICE:"
                                                  awk -F, \
                                                  '{ instructions += $4 + $5; covered += $5 } END \
                                                  { print covered, "/", instructions, " instructions covered"; \
                                                  print int(100*covered/instructions), "% covered" }' \
                                                  target/site/jacoco/jacoco.csv
                                                  # return to previously saved path
                                                  popd
                                              done
                                - step:
                                      type: Run
                                      name: Python Code Coverage
                                      identifier: Python_Code_Coverage
                                      spec:
                                          connectorRef: org.Dockerhub
                                          image: python:latest
                                          shell: Bash
                                          command: |-
                                              for SERVICE in "contacts" "userservice"; do
                                                  echo "testing $SERVICE..."
                                                  # save current working dir to memory and cd to src/$SERVICE
                                                  pushd src/$SERVICE
                                                  python3 -m venv $HOME/venv-$SERVICE
                                                  source $HOME/venv-$SERVICE/bin/activate
                                                  pip install --upgrade pip
                                                  pip install -r requirements.txt
                                                  python -m pytest --cov=./ tests/
                                                  deactivate
                                                  # return to previously saved path
                                                  popd
                                              done
